from django.contrib.gis.db import models


class WorldBorder(models.Model):
    # Regular Django fields corresponding to the attributes in the
    # world borders shapefile.
    name = models.CharField(max_length=50)
    area = models.IntegerField()
    pop2005 = models.IntegerField('Population 2005')
    fips = models.CharField('FIPS Code', max_length=2, null=True)
    iso2 = models.CharField('2 Digit ISO', max_length=2)
    iso3 = models.CharField('3 Digit ISO', max_length=3)
    un = models.IntegerField('United Nations Code')
    region = models.IntegerField('Region Code')
    subregion = models.IntegerField('Sub-Region Code')
    lon = models.FloatField()
    lat = models.FloatField()

    # GeoDjango-specific: a geometry field (MultiPolygonField)
    mpoly = models.MultiPolygonField()

    # Returns the string representation of the model.
    def __str__(self):
        return self.name

class PhiladelphiaBusinessLicenses(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    addressobj = models.FloatField(null=True, blank=True)
    address = models.CharField(max_length=41, null=True, blank=True)
    unit_type = models.CharField(max_length=4, null=True, blank=True)
    unit_num = models.CharField(max_length=12, null=True, blank=True)
    zip = models.CharField(max_length=10, null=True, blank=True)
    censustrac = models.CharField(max_length=6, null=True, blank=True)
    parcel_id_field = models.CharField(max_length=20, null=True, blank=True)
    opa_accoun = models.CharField(max_length=9, null=True, blank=True)
    opa_owner = models.CharField(max_length=82, null=True, blank=True)
    licensenum = models.CharField(max_length=6, null=True, blank=True)
    revenuecod = models.CharField(max_length=4, null=True, blank=True)
    licensetyp = models.CharField(max_length=50, null=True, blank=True)
    rentalcate = models.CharField(max_length=30, null=True, blank=True)
    initialiss = models.DateField(null=True, blank=True)
    mostrecent = models.DateField(null=True, blank=True)
    expiration = models.DateField(null=True, blank=True)
    inactiveda = models.DateField(null=True, blank=True)
    licensesta = models.CharField(max_length=9, null=True, blank=True)
    numberofun = models.FloatField(null=True, blank=True)
    owneroccup = models.CharField(max_length=3, null=True, blank=True)
    legalfirst = models.CharField(max_length=36, null=True, blank=True)
    legallastn = models.CharField(max_length=49, null=True, blank=True)
    legalname = models.CharField(max_length=80, null=True, blank=True)
    legalentit = models.CharField(max_length=10, null=True, blank=True)
    business_n = models.CharField(max_length=83, null=True, blank=True)
    business_m = models.CharField(max_length=106, null=True, blank=True)
    ownerconta = models.CharField(max_length=69, null=True, blank=True)
    ownercon_1 = models.CharField(max_length=46, null=True, blank=True)
    ownercon_2 = models.CharField(max_length=27, null=True, blank=True)
    ownercon_3 = models.CharField(max_length=2, null=True, blank=True)
    ownercon_4 = models.CharField(max_length=10, null=True, blank=True)
    ownercon_5 = models.CharField(max_length=48, null=True, blank=True)
    ownercon_6 = models.CharField(max_length=99, null=True, blank=True)
    ownercon_7 = models.CharField(max_length=20, null=True, blank=True)
    ownercon_8 = models.CharField(max_length=2, null=True, blank=True)
    ownercon_9 = models.CharField(max_length=10, null=True, blank=True)
    geocode_x = models.FloatField(null=True, blank=True)
    geocode_y = models.FloatField(null=True, blank=True)
    council_di = models.CharField(max_length=2, null=True, blank=True)
    posse_jobi = models.CharField(max_length=9, null=True, blank=True)
    geom = models.MultiPointField()


class PhiladelphiaBeverageTax(models.Model):
    registrati = models.CharField(max_length=22, null=True, blank=True)
    doing_busi = models.CharField(max_length=58, null=True, blank=True)
    street_add = models.CharField(max_length=56, null=True, blank=True)
    city = models.CharField(max_length=19, null=True, blank=True)
    state = models.CharField(max_length=2, null=True, blank=True)
    zip_code = models.CharField(max_length=10, null=True, blank=True)
    phone_numb = models.CharField(max_length=10, null=True, blank=True)
    phone_exte = models.CharField(max_length=5, null=True, blank=True)
    website = models.CharField(max_length=45, null=True, blank=True)
    geom = models.MultiLineStringField(srid=-1)


class PhiladelphiaStreetPoles(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    oid = models.IntegerField(null=True, blank=True)
    pole_num = models.IntegerField(null=True, blank=True)
    type = models.CharField(max_length=4, null=True, blank=True)
    nlumin = models.IntegerField(null=True, blank=True)
    lum_size = models.IntegerField(null=True, blank=True)
    height = models.IntegerField(null=True, blank=True)
    pole_date = models.DateField(null=True, blank=True)
    up_date = models.DateField(null=True, blank=True)
    owner = models.CharField(max_length=9, null=True, blank=True)
    tap_id = models.IntegerField(null=True, blank=True)
    block = models.CharField(max_length=7, null=True, blank=True)
    plate = models.CharField(max_length=4, null=True, blank=True)
    geom = models.MultiPointField()


class PhiladelphiaBuildingCerts(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    address = models.CharField(max_length=33, null=True, blank=True)
    unit_type = models.CharField(max_length=3, null=True, blank=True)
    unit_num = models.CharField(max_length=10, null=True, blank=True)
    zip = models.CharField(max_length=10, null=True, blank=True)
    buildingce = models.CharField(max_length=14, null=True, blank=True)
    building_1 = models.CharField(max_length=49, null=True, blank=True)
    inspection = models.DateField(null=True, blank=True)
    inspecti_1 = models.CharField(max_length=16, null=True, blank=True)
    expiration = models.DateField(null=True, blank=True)
    bin = models.CharField(max_length=7, null=True, blank=True)
    contractor = models.CharField(max_length=52, null=True, blank=True)
    contract_1 = models.CharField(max_length=104, null=True, blank=True)
    council_di = models.CharField(max_length=2, null=True, blank=True)
    posse_jobi = models.CharField(max_length=9, null=True, blank=True)
    geom = models.MultiLineStringField()


class InvasivePlant(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    site_id_fs = models.CharField(max_length=30, null=True, blank=True)
    accepted_p = models.CharField(max_length=8, null=True, blank=True)
    accepted_s = models.CharField(max_length=53, null=True, blank=True)
    accepted_c = models.CharField(max_length=60, null=True, blank=True)
    date_colle = models.DateField(null=True, blank=True)
    total_area = models.FloatField(null=True, blank=True)
    infested_a = models.FloatField(null=True, blank=True)
    infested_p = models.IntegerField(null=True, blank=True)
    fs_unit_na = models.CharField(max_length=53, null=True, blank=True)
    crc_value = models.CharField(max_length=16, null=True, blank=True)
    geom = models.MultiPolygonField()


class MontgomeryCountyWatershed(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    huc12 = models.CharField(max_length=12, null=True, blank=True)
    name = models.CharField(max_length=37, null=True, blank=True)
    shape_are = models.FloatField(null=True, blank=True)
    shape_len = models.FloatField(null=True, blank=True)
    geom = models.MultiPolygonField()


class MontgomeryCountyGeology(models.Model):
    objectid = models.IntegerField(null=True, blank=True)
    original_l = models.CharField(max_length=4, null=True, blank=True)
    sgmc_label = models.CharField(max_length=9, null=True, blank=True)
    unit_name = models.CharField(max_length=52, null=True, blank=True)
    minimum_ag = models.CharField(max_length=54, null=True, blank=True)
    maximum_ag = models.CharField(max_length=54, null=True, blank=True)
    major_1 = models.CharField(max_length=12, null=True, blank=True)
    major_2 = models.CharField(max_length=8, null=True, blank=True)
    minor_1 = models.CharField(max_length=17, null=True, blank=True)
    minor_2 = models.CharField(max_length=22, null=True, blank=True)
    reference_field = models.CharField(max_length=5, null=True, blank=True)
    reference = models.CharField(max_length=233, null=True, blank=True)
    generalize = models.CharField(max_length=41, null=True, blank=True)
    digital_ur = models.CharField(max_length=74, null=True, blank=True)
    ngmdb1 = models.CharField(max_length=49, null=True, blank=True)
    shape_are = models.FloatField(null=True, blank=True)
    shape_len = models.FloatField(null=True, blank=True)
    geom = models.MultiPolygonField()


class MontgomeryCountyParcel(models.Model):
    objectid = models.BigIntegerField()
    taxpin = models.CharField(max_length=12, null=True, blank=True)
    alternatei = models.CharField(max_length=30, null=True, blank=True)
    parceltype = models.CharField(max_length=30, null=True, blank=True)
    calcacreag = models.FloatField(null=True, blank=True)
    truecalcul = models.FloatField(null=True, blank=True)
    created_us = models.CharField(max_length=254, null=True, blank=True)
    created_da = models.DateField(null=True, blank=True)
    last_edite = models.CharField(max_length=254, null=True, blank=True)
    last_edi_1 = models.DateField(null=True, blank=True)
    objectid_1 = models.BigIntegerField(null=True, blank=True)
    parcel_num = models.CharField(max_length=30, null=True, blank=True)
    location_c = models.CharField(max_length=2, null=True, blank=True)
    class_fix = models.CharField(max_length=4, null=True, blank=True)
    nbhd = models.CharField(max_length=8, null=True, blank=True)
    zoning = models.CharField(max_length=8, null=True, blank=True)
    liv_units = models.CharField(max_length=3, null=True, blank=True)
    util1 = models.CharField(max_length=2, null=True, blank=True)
    util2 = models.CharField(max_length=2, null=True, blank=True)
    util3 = models.CharField(max_length=2, null=True, blank=True)
    traffic = models.CharField(max_length=2, null=True, blank=True)
    roads1 = models.CharField(max_length=2, null=True, blank=True)
    roads2 = models.CharField(max_length=2, null=True, blank=True)
    block = models.CharField(max_length=4, null=True, blank=True)
    unit = models.CharField(max_length=3, null=True, blank=True)
    alt_id = models.CharField(max_length=30, null=True, blank=True)
    prop_info_field = models.CharField(max_length=10, null=True, blank=True)
    total_appr = models.BigIntegerField(null=True, blank=True)
    total_asse = models.BigIntegerField(null=True, blank=True)
    restrictio = models.CharField(max_length=13, null=True, blank=True)
    farmland = models.CharField(max_length=10, null=True, blank=True)
    obyval = models.BigIntegerField(null=True, blank=True)
    land_use = models.CharField(max_length=4, null=True, blank=True)
    asmt_chgda = models.CharField(max_length=10, null=True, blank=True)
    own1 = models.CharField(max_length=40, null=True, blank=True)
    own2 = models.CharField(max_length=40, null=True, blank=True)
    careof = models.CharField(max_length=60, null=True, blank=True)
    addr1 = models.CharField(max_length=134, null=True, blank=True)
    addr2 = models.CharField(max_length=80, null=True, blank=True)
    addr3 = models.CharField(max_length=123, null=True, blank=True)
    zip1_zip2 = models.CharField(max_length=10, null=True, blank=True)
    own_info_c = models.CharField(max_length=10, null=True, blank=True)
    muni_code = models.CharField(max_length=5, null=True, blank=True)
    sch_dist = models.CharField(max_length=5, null=True, blank=True)
    subdivisio = models.CharField(max_length=40, null=True, blank=True)
    lot_no = models.CharField(max_length=8, null=True, blank=True)
    frontft = models.CharField(max_length=7, null=True, blank=True)
    legal1 = models.CharField(max_length=60, null=True, blank=True)
    legal2 = models.CharField(max_length=60, null=True, blank=True)
    legal3 = models.CharField(max_length=60, null=True, blank=True)
    loc_no = models.BigIntegerField(null=True, blank=True)
    loc_add = models.CharField(max_length=6, null=True, blank=True)
    loc_dir = models.CharField(max_length=2, null=True, blank=True)
    loc_str = models.CharField(max_length=30, null=True, blank=True)
    loc_suf = models.CharField(max_length=8, null=True, blank=True)
    loc_suf2 = models.CharField(max_length=8, null=True, blank=True)
    loc_unitde = models.CharField(max_length=10, null=True, blank=True)
    loc_unitno = models.CharField(max_length=10, null=True, blank=True)
    location1 = models.CharField(max_length=69, null=True, blank=True)
    location2 = models.CharField(max_length=21, null=True, blank=True)
    loc_zip1_z = models.CharField(max_length=10, null=True, blank=True)
    legal_chgd = models.CharField(max_length=10, null=True, blank=True)
    est_co_tax = models.BigIntegerField(null=True, blank=True)
    est_muni_t = models.BigIntegerField(null=True, blank=True)
    est_sch_ta = models.BigIntegerField(null=True, blank=True)
    deed_book = models.CharField(max_length=8, null=True, blank=True)
    deed_page = models.CharField(max_length=8, null=True, blank=True)
    sale_date = models.CharField(max_length=10, null=True, blank=True)
    considerat = models.BigIntegerField(null=True, blank=True)
    state_tax_field = models.CharField(max_length=20, null=True, blank=True)
    steb = models.CharField(max_length=2, null=True, blank=True)
    land_sf = models.BigIntegerField(null=True, blank=True)
    land_acres = models.FloatField(null=True, blank=True)
    land_chgda = models.CharField(max_length=10, null=True, blank=True)
    pool = models.CharField(max_length=3, null=True, blank=True)
    oby_chgdat = models.CharField(max_length=10, null=True, blank=True)
    condition = models.CharField(max_length=1, null=True, blank=True)
    degree_rem = models.CharField(max_length=1, null=True, blank=True)
    yr_rem = models.CharField(max_length=10, null=True, blank=True)
    sfla = models.BigIntegerField(null=True, blank=True)
    finbsmt_sf = models.BigIntegerField(null=True, blank=True)
    stories = models.CharField(max_length=10, null=True, blank=True)
    extwall = models.CharField(max_length=2, null=True, blank=True)
    basement = models.CharField(max_length=1, null=True, blank=True)
    fuel = models.CharField(max_length=1, null=True, blank=True)
    heat = models.CharField(max_length=1, null=True, blank=True)
    year_built = models.CharField(max_length=10, null=True, blank=True)
    style = models.CharField(max_length=2, null=True, blank=True)
    bedrooms = models.CharField(max_length=10, null=True, blank=True)
    baths = models.CharField(max_length=10, null=True, blank=True)
    half_baths = models.CharField(max_length=10, null=True, blank=True)
    rm_tot = models.CharField(max_length=10, null=True, blank=True)
    prefab_frp = models.CharField(max_length=10, null=True, blank=True)
    frpl_open = models.CharField(max_length=10, null=True, blank=True)
    frpl_stack = models.CharField(max_length=10, null=True, blank=True)
    bsmt_car = models.CharField(max_length=10, null=True, blank=True)
    dwel_chgda = models.CharField(max_length=10, null=True, blank=True)
    comm_area = models.BigIntegerField(null=True, blank=True)
    comm_nla = models.BigIntegerField(null=True, blank=True)
    structure = models.CharField(max_length=3, null=True, blank=True)
    use_type = models.CharField(max_length=3, null=True, blank=True)
    comm_bsmt = models.CharField(max_length=3, null=True, blank=True)
    comm_heat = models.CharField(max_length=1, null=True, blank=True)
    comm_air = models.CharField(max_length=1, null=True, blank=True)
    comm_yr_bl = models.CharField(max_length=10, null=True, blank=True)
    comm_units = models.BigIntegerField(null=True, blank=True)
    comm_ident = models.CharField(max_length=12, null=True, blank=True)
    park_cov = models.CharField(max_length=12, null=True, blank=True)
    park_uncov = models.CharField(max_length=12, null=True, blank=True)
    partition = models.CharField(max_length=1, null=True, blank=True)
    residual = models.CharField(max_length=3, null=True, blank=True)
    elev = models.CharField(max_length=3, null=True, blank=True)
    comm_chgda = models.CharField(max_length=10, null=True, blank=True)
    assessment = models.FloatField(null=True, blank=True)
    prop_info1 = models.DateField(null=True, blank=True)
    assmt_chgd = models.DateField(null=True, blank=True)
    own_info_1 = models.DateField(null=True, blank=True)
    legal_ch_1 = models.DateField(null=True, blank=True)
    sale_date_field = models.DateField(null=True, blank=True)
    land_chdat = models.DateField(null=True, blank=True)
    oby_chgd_1 = models.DateField(null=True, blank=True)
    dwel_chg_1 = models.DateField(null=True, blank=True)
    comm_chg_1 = models.DateField(null=True, blank=True)
    parcel = models.CharField(max_length=12, null=True, blank=True)
    landsf = models.CharField(max_length=10, null=True, blank=True)
    est_mccc_t = models.BigIntegerField(null=True, blank=True)
    shape_leng = models.FloatField(null=True, blank=True)
    shape_area = models.FloatField(null=True, blank=True)
    geom = models.MultiPolygonField(srid=2272)

    # Returns the string representation of the model.
    def __str__(self):
        return self.addr1


class Location(models.Model):
    name = models.TextField()
    geom = models.PointField()

